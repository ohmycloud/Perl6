 当作为一个项使用时， 我们把 * 叫做 "whatever"
 当不是实际值时，它用作占位符
 例如, 1, 2, 3 ... *
 意思是没有终结点的自然数序列

 Whatever 闭包
 Whatever 最强大的用处是 Whatever 闭包

 对于 whatever 没有特殊意义的普通操作符：
     把 whatever 当作参数传递时就创建了一个闭包！
 所以，举个例子，  * + 1 等价于 -> $a { $a + 1 }
 * + * 等价于 -> $a, $b { $a + $b }
 @list.grep(* > 10) 返回@list 数组中所有大于 10 的元素
 @list.map(* + *) 返回 @list 中每对儿的和

如果给 @a[ ] 的方括号里面传递一个闭包， 它会把 @a 数组的元素个数作为参数传递并计算！ 

数组的最后一个元素
my @a =  1,22,33,11;
say @a[*-1];
say @a[->$a {$a-1}]; # $a  即为数组@a 的元素个数
数组的倒数第二个元素
say @a[*-2];
say @a[->$a {$a-2}];

所以 @a[*/2] 是@a 数组的中间元素
@a[1..*-2]  是@a 中不包含首尾元素的其它元素
1, 1, * + * ... *  是一个无限列表
* + * 是后来值的生成规则， 最后一个 * 表示没有终结测试。


