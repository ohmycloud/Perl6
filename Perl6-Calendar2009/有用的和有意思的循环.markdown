有用的和有意思的循环
分类: Perl6
日期: 2013-05-16 20:02
原文地址: http://blog.sina.com.cn/s/blog_6c9ce1650101c9qk.html


原文： http://www.php-oa.com/2011/09/30/perl6-looping-for-fun-and-profit.html

 

  让我们来看一个基本的例子.

  
 for 1, 2, 3, 4 { .say }


      这是一个最简单清晰的语法的例子.在这并没有使用括号来包起整个列表的语句,象这种写法可以贯穿整个 Perl 6. 通常比起 Perl 5 来你没有必要写那么多的括号了.很象 Perl 5 . 这个循环中的值会默认存到 $_ .在这个方法调用的 say 其实就是 $_.say .注意在 Perl 6 中,你不能直接只打一个 say  而不加参数,它会默认使用 $_ 来传参.你需要使用 .say 。要么明确的指定是 $_.


下面这个语法块并不是一个普通的块.它能通过一个尖的指向,来告诉你的 循环变量传进去的参数的名字 .

  
 for 1, 2, 3, 4 -> $i { $i .say }


    如果你调用的 return 内部有这个,将返回闭合的子函数.
    这个尖尖也能取 多个 参数.象下面这样.

 1
 2   
 3
 >  for 1, 2, 3, 4 -> $i , $j { "$i, $j" .say }
 1 2
 3 4


      实际做了些什么啦？就是你在列表进行 迭代时一次取了两个元素 . 如果你不明确指明参数的话,就退化到 Perl 5 一样使用 $_.


我们可以意识到这个我们能做什么,比如迭代一个列表。当然,也可以是一个数组的值.

  
 for @array { .say }


  这是一个非常简单的例子,我们可能更加喜欢使用 map:

  
 @array . map : *.say;


如果对你来讲 顺序 和连续的并不重要,你可以使用 hyperoperator（超运算符）,上一个文章中也讲过这个,今天的主题也不详细讲这个了.

  
  @array ».say;


    我们也能使用 范围构造器中缀 的 <..> 来生成一个数字的列表：

  
   for 1..4 { .say }


      有一个最通用的功能,就是我们想些生成一个从 0 开始到 $n 的数字的列表,比如常用的数组下标.我们可以写成 0 .. $n-1或者另一个不同的范围构造器 0..^$n.但在 Perl 6 中提供了一个短的快捷的方法就是使用前缀的 <^>.

  
  
  
  
  
 > for ^4 { .say }
 0
 1
 2
 3


一个常用的理由是,人们在 Perl 5 中常常退回到 C 风格的循环的原因是必须知道 for 的成员数组中索引的位置,或者因为必须并行的迭代二个和更多的数组.Perl 6 提供了一个短的快捷方法,就是中缀的 Z 这个 zip 操作符.

  
   for @array1 Z @array2 -> $one , $two { ... }


假设二个数组是相同的长度$one 会是第一个 @array1 的成员元素,$two 会是相应的位置 @array2 的成员元素.如果是不同的长度的话.迭代会停止到短的那个数组结束的长度.

        我们可以很容易地在迭代数组包含进索引：

     
 for ^Inf Z @array -> $index , $item { ... }


      如果一个无限长的列表,会让你害怕使用上面用法的话,可以象下面这样,使 用前缀操作符 ^ 来取出数组元素的长度.

     
 for ^ @array .elems Z @array -> $index , $item { ... }


上面这个可以得到相同的结果,但是更加优雅.因为中缀操作符 Z 操作时,第一个元素的长度决定了什么整个长度.

  
     for @array .kv -> $index , $item { ... }


          @array .kv 会返回 keys 和 values 的交错, 这个 $key 是数组元素的下标 .所以同时迭代这二个可能是你比较想要的效果.

希望这篇文章让你了解 Perl 6 灵活的循环相关的一些概念,它们可以灵活的使用在各种常见任务上.在这之前,我要回答最后一个问题,我知道有人一直在想这个问题.怎么样一次性迭代四个数组.

  
 for @one Z @two Z @three Z @four -> $one , $two , $three , $four { ... }


这是一个关联列表中缀操作符,这样使用,是不是一种享受？